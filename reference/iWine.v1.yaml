openapi: 3.0.0
info:
  title: iWine
  version: '1.0'
  contact:
    name: Dmitry
    email: dima@melodrom.ru
  description: 'LAN API for iWine devices. Get current wine volume (in litres), alcohol contents (per cent), sugar (per cent), temperature, wine type (as a JSON list of strings and certainty values: {"red":90, "white":1,  "rose":9, "orange":0}). Aerate contents or cool/warm to a desired temperature. Set callback url to receive notifications to your device within LAN.'
  license:
    name: GPL
servers:
  - url: localhost
    description: ''
paths:
  /status:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  volume:
                    type: number
                    minimum: 0
                    description: Volume of contents in litres
                  alcohol:
                    type: number
                    minimum: 0
                    maximum: 90
                    description: Alcohol percentage by volume
                  temp:
                    type: number
                    minimum: 0
                    maximum: 90
                  type:
                    type: object
                    properties:
                      red:
                        type: number
                        minimum: 0
                        maximum: 100
                      white:
                        type: number
                        minimum: 0
                        maximum: 100
                      rose:
                        type: number
                        minimum: 0
                        maximum: 100
                      orange:
                        type: number
                        minimum: 0
                        maximum: 100
                  sugar:
                    type: number
                    minimum: 0
                    maximum: 40
                    description: Sugar contents percentage by mass
                  operations:
                    type: object
                    properties:
                      aerator:
                        type:
                          - string
                          - integer
                        enum:
                          - idle
                        minimum: 0
                        maximum: 100
                      cooler:
                        type:
                          - string
                          - integer
                        pattern: idle
                        minimum: 0
                        maximum: 100
                  result:
                    type: string
                    enum:
                      - ok
                      - unauthorized
                      - malfunction
                      - bad_shit
                    description: '"Unauthorized" if invalid name/signature'
              examples: {}
      operationId: get-status
      description: Returns JSON with device status information
      requestBody: {}
      parameters:
        - schema:
            type: string
            minLength: 44
            maxLength: 44
            pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
          in: query
          name: sig
          required: true
          description: Status request JSON signed by requestor key
        - schema:
            type: string
            maxLength: 256
            minLength: 1
            pattern: '^[A-Za-z0-9 -_]+'
          in: query
          name: name
          description: Requestor name
          required: true
  /command:
    post:
      summary: ''
      operationId: post-command
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
          headers:
            WWW-Authenticate:
              schema:
                type: string
                default: HOBA
              required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                aerate:
                  description: Aerate contents. It takes up to 15 minutes to complete this operation.
                settemp:
                  type: integer
                  minimum: 1
                  maximum: 90
                  description: Cool/warm contents to the desired temperature in Celsius. It takes up to 15 minutes to complete this operation.
  /pair:
    post:
      summary: ''
      operationId: post-pair
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type:
                  - string
                  - object
                description: iWine device name and ed25519 public key
                properties:
                  name:
                    type: string
                    minLength: 1
                    maxLength: 256
                    pattern: '^[A-Za-z0-9 -_]+'
                    description: iWine device name
                  key:
                    type: string
                    description: iWine device ed25519 public key
                    minLength: 22
                    maxLength: 22
                    pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Requesting device name and ed25519 public key
              properties:
                name:
                  type: string
                  minLength: 1
                  maxLength: 256
                  pattern: '^[A-Za-z0-9 -_]+'
                  description: Requesting device name
                key:
                  type: string
                  minLength: 22
                  maxLength: 22
                  pattern: '^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$'
                  description: Requesting device name and ed25519 public key
              required:
                - name
                - key
    parameters: []
  /auth:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-auth
components:
  schemas: {}
  securitySchemes:
    API Key - 1:
      name: API Key
      type: apiKey
      in: query
